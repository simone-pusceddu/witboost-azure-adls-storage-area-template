apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: azure-storage-adlsgen2-template-skeleton
  title: ADLS Gen2 Storage Area (Skeleton)
  description: Create an Azure Storage account, including Data Lake Storage Gen2 containers for a Data Product.
  mesh:
    icon: https://cdn-images-1.medium.com/v2/resize:fit:914/1*iYJgfYgxDWBcfWjl1twsag.png
  tags:
    - azure
    - adlsgen2
    - storage
  annotations:
    backstage.io/techdocs-ref: dir:.
spec:
  generates: componenttype:default/storage
  owner: agilelab
  type: storage
  parameters:
    - title: Component Metadata
      description: Basic Information for this component.
      required:
        - name
        - description
        - domain
        - dataproduct
      properties:
        name:
          title: Name
          type: string
          description: Display name for this storage area.
          ui:field: EntityNamePicker
          default: ADLS Gen2 Storage
          ui:options:
            allowArbitraryValues: true
        description:
          title: Description
          type: string
          description: Required. Detailed explanation about the function and the meaning
            of this storage area.
        domain:
          title: Domain
          type: string
          description: Required. Domain of the Data Product this storage component belongs to
          ui:field: EntityPicker
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - Domain
        dataproduct:
          title: Data Product
          type: string
          description: Required. Data Product this storage component belongs to
          ui:field: EntityPicker
          ui:filter:
            - fieldName: domain
              entityPath: spec.domain
          ui:options:
            allowArbitraryValues: false
            allowedKinds:
              - System
        identifier:
          title: Identifier
          type: string
          description: Autogenerated from the information above. A unique identifier for
            the component. It will not be editable after creation and is a
            string that is composed of [a-zA-Z] separated by any of [-_].
          ui:field: ComponentIdentifierPicker
          ui:options:
            allowArbitraryValues: false
        developmentGroup:
          title: DevelopmentGroup
          type: string
          description: Automatically selected from the Data Product metadata. Data Product
            development group.
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.owner
          ui:options:
            allowArbitraryValues: false
        dependsOn:
          title: Depends on
          type: array
          description: A component could depend on other components in the same Data
            Product. This information will be used to deploy the components in
            such an order that their dependencies already exist.
          default: []
          items:
            type: string
            ui:field: EntityRelationsPicker
            ui:fieldName: dataproduct
            relation: hasPart
        tags:
          title: Tags
          type: array
          default: []
          description: Tags for the component
          items:
            type: string
        domainName:
          type: string
          ui:field: EntitySelectionPicker
          ui:fieldName: domain
          ui:property: spec.mesh.name
          ui:options:
            allowArbitraryValues: false
          ui:widget: hidden
        dataproductName:
          type: string
          ui:field: EntitySelectionPicker
          ui:fieldName: dataproduct
          ui:property: spec.mesh.name
          ui:options:
            allowArbitraryValues: false
          ui:widget: hidden
    - title: ADLS Gen2 Storage Area Deployment Information
      description: Location of the Storage Area inside the ADLS Gen2.
      required:
        - resourceGroup
        - containers
        - performance
        - redundancy
        - accessTier
      properties:
        resourceGroup:
          title: Resource Group
          type: string
          description: >
            Required. The Resource Group to assign the Storage Account to. It must already exist
          ui:field: EntityNamePicker
          ui:options:
            allowArbitraryValues: true
        containers:
          title: Containers
          type: array
          default: []
          description: Required. The ADLS Gen2 container(s) to create inside the storage
            account.
          minItems: 1
          items:
            type: string
            title: Name of the Container
            description: Name of the container.
            minLength: 3
            maxLength: 63
            ui:field: EntityNamePicker
            pattern: ^[a-z0-9][a-z0-9-]{2,62}[a-z0-9]$
            ui:help: The field should only contain lowercase letters, numbers, and hyphens,
              and must begin with a letter or a number. Each hyphen must be
              preceded and followed by a non-hyphen character. The name must
              also be between 3 and 63 characters long.
            ui:options:
              allowArbitraryValues: true
        performance:
          title: Performance
          type: string
          description: >
            Required. Determine whether you want to have premium performance
            for block blobs, file shares, or page blobs in your storage account.
          default: Standard
          enum:
            - Premium
            - Standard
          enumNames:
            - Premium (Recommended for scenarios that required low latency)
            - Standard (Recommended for most scenarios (general-purpose v2
              account))
        redundancy:
          title: Redundancy
          type: string
          description: >
            Required. The data in your Azure storage account is always
            replicated to ensure durability and high availability.

            Choose a replication strategy that matches your durability requirements.
          default: LRS
          enum:
            - LRS
            - GRS
            - ZRS
            - GZRS
          enumNames:
            - "LRS: Lowest-cost option with basic protection against server rack
              and drive failures. Recommended for non-critical scenarios."
            - "GRS: Intermediate option with failover capabilities in a
              secondary region. Recommended for backup scenarios."
            - "ZRS: Intermediate option with protection against datacenter-level
              failures. Recommended for high availability scenarios."
            - "GZRS: Optimal data protection solution that includes the
              offerings of both GRS and ZRS. Recommended for critical data
              scenarios."
        accessTier:
          title: Access Tier
          type: object
          description: >
            The account access tier is the default tier that is inferred by any
            blob without an explicitly set tier.
          properties:
            customRadio:
              type: string
              title: Choose an Access Tier
              default: Hot
              ui:widget: radio
              oneOf:
                - const: Hot
                  title: "Hot: Optimized for frequently accessed data and everyday usage
                    scenarios"
                - const: Cold
                  title: "Cold: Optimized for infrequently accessed data and backup scenarios"
        infrastructureEncryptionEnabled:
          title: Enable Infrastructure Encryption
          type: boolean
          default: false
          description: By default, Azure encrypts storage account data at rest. By
            enabling it, infrastructure encryption adds a second layer of
            encryption to your storage account's data.
        allowNestedItemsToBePublic:
          title: Allow Nested Items to be Public
          type: boolean
          default: true
          description: Allow or disallow nested items within this Account to opt into
            being public. Defaults to true.
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        targetPath: .
        values:
          name: ${{ parameters.name }}
          domainName: ${{ parameters.domainName }}
          dataproductName: ${{ parameters.dataproductName }}
          description: ${{ parameters.description }}
          domain: ${{ parameters.domain }}
          dataproduct: ${{ parameters.dataproduct }}
          identifier: ${{ parameters.identifier }}
          developmentGroup: ${{ parameters.developmentGroup }}
          dependsOn: ${{ parameters.dependsOn }}
          tags: ${{ parameters.tags }}
          resourceGroup: ${{ parameters.resourceGroup }}
          containers: ${{ parameters.containers }}
          performance: ${{ parameters.performance }}
          redundancy: ${{ parameters.redundancy }}
          accessTier: ${{ parameters.accessTier.customRadio }}
          infrastructureEncryptionEnabled: ${{ parameters.infrastructureEncryptionEnabled }}
          allowNestedItemsToBePublic: ${{ parameters.allowNestedItemsToBePublic }}
          destination: &destination 'gitlab.com?owner=simone.pusceddu&repo=${{ parameters.name.split(" ") | join("") | lower }}'
          useCaseTemplateId: urn:dmb:utm:azure-storage-adlsgen2-template:0.0.0
          infrastructureTemplateId: urn:dmb:itm:terraform-adls-provisioner:0
          useCaseTemplateVersion: 0.0.0

    - id: publish
      name: Publish
      action: witboostMeshComponent:publish:gitlab
      input:
        allowedHosts:
          - gitlab.com
        description: This is ${{ parameters.name }}
        repoUrl: *destination
        rootDirectory: .
        dataproduct: ${{ parameters.dataproduct }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
